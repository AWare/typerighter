#!/usr/bin/env bash

set -e

MAX_DB_ATTEMPTS=5
APP_FOLDER="apps"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR=${DIR}/..

setupTestDeps() {
  docker-compose up -d
  # Ensure containers are up
  for ATTEMPT in $(seq 1 $MAX_DB_ATTEMPTS)
  do
    HEALTH_STATUS=$(docker inspect --format "{{json .State.Health }}" $(docker-compose ps -q) | jq .Status)
    if [ $HEALTH_STATUS = "\"healthy\"" ]
    then
      echo "Docker containers – started"
      break
    fi
    if [ $ATTEMPT -eq 5 ]
    then
      echo "Docker containers did not initialise in $MAX_DB_ATTEMPTS attempts"
      exit 1
    fi
    echo "Docker containers – waiting, as status=$HEALTH_STATUS (expects \"healthy\") ($ATTEMPT/$MAX_DB_ATTEMPTS)"
    sleep 5
  done
}

teardownTestDeps() {
  docker-compose down
}

buildCDK() {
  $DIR/build-cdk
}

buildClients() {
  (cd $ROOT_DIR/$APP_FOLDER/rule-audit-client && npm i && npm run build)
  (cd $ROOT_DIR/$APP_FOLDER/rule-manager/rule-manager-client && npm i && npm run build)
}

buildSbt() {
  (
    cd $ROOT_DIR
    sbt clean compile test riffRaffNotifyTeamcity
  )
}

setup() {
  setupTestDeps
  buildCDK
  buildClients
  buildSbt
  teardownTestDeps
}

teardown() {
  teardownTestDeps
}

trap teardown EXIT

setup
teardown
